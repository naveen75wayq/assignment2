{"ast":null,"code":"var _jsxFileName = \"/Users/75way/todo-backend-1/src/App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return (\n    /*#__PURE__*/\n    //   <BrowserRouter>\n    //   <TokenContext.Provider value={{userToken, tokenDispatch, user, userDispatch}}>\n    //     <TaskContext.Provider value={{ tasks, dispatch }}>\n    //       <Routes>\n    //         <Route path=\"/\" element={<Header />}>\n    //           <Route path='/' element={token ? <Layout /> : <Login />}>\n    //             <Route index element={<AllTask />} />\n    //             <Route path=\"active\" element={<Active />} />\n    //             <Route path=\"completed\" element={<Completed />} />\n    //           </Route>\n    //           <Route path=\"/login\" element={<Login />} />\n    //           <Route path=\"/register\" element={<Register />} />\n    //           <Route path=\"/forgotPassword\" element={<ForgotPassword />} />\n    //           <Route path=\"/resetPassword\" element={<ResetPassword />} />\n    //         </Route>\n    //       </Routes>\n    //     </TaskContext.Provider>\n    //   </TokenContext.Provider>\n    // </BrowserRouter>\n    _jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 32\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/register\",\n            element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 3\n    }, this)\n  );\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","jsxDEV","_jsxDEV","App","BrowserRouter","children","Routes","Route","path","element","Header","fileName","_jsxFileName","lineNumber","columnNumber","Login","Register","_c","$RefreshReg$"],"sources":["/Users/75way/todo-backend-1/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n  //   <BrowserRouter>\n  //   <TokenContext.Provider value={{userToken, tokenDispatch, user, userDispatch}}>\n  //     <TaskContext.Provider value={{ tasks, dispatch }}>\n  //       <Routes>\n  //         <Route path=\"/\" element={<Header />}>\n  //           <Route path='/' element={token ? <Layout /> : <Login />}>\n  //             <Route index element={<AllTask />} />\n  //             <Route path=\"active\" element={<Active />} />\n  //             <Route path=\"completed\" element={<Completed />} />\n  //           </Route>\n  //           <Route path=\"/login\" element={<Login />} />\n  //           <Route path=\"/register\" element={<Register />} />\n  //           <Route path=\"/forgotPassword\" element={<ForgotPassword />} />\n  //           <Route path=\"/resetPassword\" element={<ResetPassword />} />\n  //         </Route>\n  //       </Routes>\n  //     </TaskContext.Provider>\n  //   </TokenContext.Provider>\n\n  // </BrowserRouter>\n  <BrowserRouter>\n    <Routes>\n      <Route path=\"/\" element={<Header />}>\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/register\" element={<Register />} />\n      </Route>\n    </Routes>\n  </BrowserRouter>\n    \n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EACb;IAAA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACAD,OAAA,CAACE,aAAa;MAAAC,QAAA,eACZH,OAAA,CAACI,MAAM;QAAAD,QAAA,eACLH,OAAA,CAACK,KAAK;UAACC,IAAI,EAAC,GAAG;UAACC,OAAO,eAAEP,OAAA,CAACQ,MAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UAAAT,QAAA,gBAClCH,OAAA,CAACK,KAAK;YAACC,IAAI,EAAC,QAAQ;YAACC,OAAO,eAAEP,OAAA,CAACa,KAAK;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC3CZ,OAAA,CAACK,KAAK;YAACC,IAAI,EAAC,WAAW;YAACC,OAAO,eAAEP,OAAA,CAACc,QAAQ;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;AAGlB;AAACG,EAAA,GAhCQd,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}